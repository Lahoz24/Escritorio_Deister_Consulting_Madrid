---------------------------------------------------------------

FASE 1
Crear dos tablas (de estructura padre-hijo)
    - PADRE: cabid, codigo, Descripción, Fecha, importe total y un estado. 
             cabid=> Serial
             codigo => Char(4)
             descri => Varchar(255)
             fecha => date
             imptot => decimal(17,2) 
             estado => char(1)
    - HIJO:  cabid, linid, codigo descripción, importe y un estado. 
Crear diccionarios
Crear atributos
Crear objetos y relacionarlos

https://docs.deistercloud.com/content/Axional%20development%20tools.15/Axional%20Studio.2/Development%20Guide.10/Languages%20reference.16/XSQL%20Script.10/Packages.40

https://mydeister.com/servlet/jrep?code=wic_jrep_form_tabs&user=rdm&dbms=wic_form_2022&query=true

---------------------------------------------------------------

FASE 1.1
Crear panel y agregar objetos.

---------------------------------------------------------------

FASE 2
Modificar tabla padre y tabla hijo para agregar los datos de control (user_created, date_created, user_updated, date_updated)  (estos datos de control están en todas o la gran mayoria de tablas del estandar para que veas como están definidos. en todos iguales)
    - Agregar a diccionarios, atributos y objetos

 
Modificar tabla padre
    - Modificar nombre campo fecha por fecini (fecha de inicio) (tendrás que cambiar mas cosas que solo el nombre de columna en la tabla ;)  ) 
    - Agregarle otra fecha fecfin (fecha fin)

Modificar tabla hija para agregarle una fecha (Fecha). 


crear tabla de bloqueos (tabla, objeto, diccionarios, atributos lo que necesites)
    codigo (numerico) y descri. 

Agregar en las tablas padre e hijo los campos import (decimal,17,2) y dtoimp(decimal, 17,2)

Agregar en cabecera y lineas los campos caberr (numerico) y linerr (numerico)   respectivamente (caberr en padre y linerr en hijo1). 

Agregar nuevos estados tanto en cabecera como en líneas.  Abierto, cerrado, anulado, validado, bloqueado.

---------------------------------------------------------------

FASE 3
Crear un botón que al presiónar diga mediante menesaje de error un "Hola mundo"
crear un botón al que le paseis dos argumentos, uno de ellos que sea un dato de la query principal y el otro uno que pidais por pantalla al accionar elbotón y mostrar concatenado el mensaje de Hola Mundo con el valor de los dos argumentos
Crear un proceso que actualice el importe total de la cabecera con lo que haya en lineas. Llamado desde botón

---------------------------------------------------------------

FASE 4

Poner bloqueo en cabecera si el importe total de las lineas no coincide con el de cabecera. El bloqueo solo permitirá ejecutar el botón de actualizar importes. 
    Actualizará el estado a bloqueado. (BLOQUEO POR IMPORTE)


Actualizar imptot de linea en funcion del importe y dto. con JS.  
Proceso que actualice el importe e importe total  de cabecera cuando se modifique alguno de las líneas
    - DEL por trigger
    - UPD/INT TXManager

Agregar Campo texto varchar(255) cabecera para informar de los importes anteriores modificados.
Funcion Javascript en el hijo que cada vez que se guarde una modificación del el importe y/o descuento (por defecto el importe total), se actualice el campo texto de la cabecera con la fecha actual, el importe y descuento anterior.

Validar que al generar la linea hija la fecha introducida esté entre la fecha de inicio y fin de la cabecera. 

    - Primero por JavaScript. 
    - Segundo por TxManager
    - Tercero por trigger


Poner bloqueo en lineas si se ACTUALIZA la  fecha y está fuera dle rango de las fechas dela cabecera.      Se actualizará el estao de la linea a bloqueado.

--Este bloqueo no permite realizar nada sobre la linea ni que tenga que ver con ella hasta que la fecha esté correcta o se elimine la linea. 

    
Si alguna linea está en bloqueado la cabecera deberá estar bloqueada. El bloqueo puesto en las líneas deberá actualizarse en la cabecera.